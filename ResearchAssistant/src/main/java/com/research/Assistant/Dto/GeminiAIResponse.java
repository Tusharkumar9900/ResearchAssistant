package com.research.Assistant.Dto;

import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import lombok.Data;

/**
 * GeminiAIResponse is a Data Transfer Object (DTO) that models the response 
 * received from the Gemini AI API. It follows a hierarchical structure 
 * representing candidates, their content, and individual parts of the content.
 */
@Data // Lombok annotation to generate getters, setters, equals, hashCode, and toString methods automatically.
@JsonIgnoreProperties(ignoreUnknown = true) // Ignores unknown properties in the JSON response to prevent deserialization errors.
public class GeminiAIResponse {

       /**
     * Represents a list of `Candidate` objects in the response.
     * Each candidate contains `Content`, which holds a list of `Part` objects.
     */
    public List<Candidate> candidates;

     /**
     * Represents an AI-generated candidate response.
     * Each candidate contains a content object.
     */
    @Data // Generates getters, setters, equals, hashCode, and toString for Candidate class.
    @JsonIgnoreProperties(ignoreUnknown = true) // Ensures unknown JSON fields do not cause errors.
    public static class Candidate{
        private Content content; // Stores the content generated by AI.
    }


     /**
     * Represents the content of a candidate response.
     * The content consists of multiple `Part` objects.
     */
    @Data
    @JsonIgnoreProperties(ignoreUnknown = true)
    public static class Content{
        private List<Part> parts; // Stores different parts of the generated response.
    }

      /**
     * Represents a part of the AI response.
     * Each part contains a piece of text.
     */
    @Data
    @JsonIgnoreProperties(ignoreUnknown = true)
    public static class Part{
        private String text; // The actual text content generated by the AI.
    }
}


/*
 * 
1️⃣ Annotations
@Data (Lombok Annotation)
Automatically generates:
Getters & Setters
equals(), hashCode(), and toString() methods
Eliminates the need to manually define these methods.
@JsonIgnoreProperties(ignoreUnknown = true)
Ensures that any extra fields in the JSON response (not mapped in this class) do not cause deserialization errors.

2️⃣ Structure of GeminiAIResponse
The response consists of a hierarchical data model:

GeminiAIResponse (Root Level)
Contains a list of Candidate objects.
Candidate (First Level)
Each Candidate contains a Content object.
Content (Second Level)
Content consists of a list of Part objects.
Part (Third Level)
Each Part contains a String text field.

3️⃣ Why Use Nested Classes?
Helps in better structuring the API response.
Ensures data encapsulation within the main DTO.
Keeps the code organized instead of creating multiple separate DTO classes.
 */